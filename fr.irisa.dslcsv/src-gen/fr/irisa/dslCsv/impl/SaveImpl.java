/**
 * generated by Xtext 2.25.0
 */
package fr.irisa.dslCsv.impl;

import fr.irisa.dslCsv.DslCsvPackage;
import fr.irisa.dslCsv.Expression;
import fr.irisa.dslCsv.Save;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Save</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.irisa.dslCsv.impl.SaveImpl#getFilename <em>Filename</em>}</li>
 *   <li>{@link fr.irisa.dslCsv.impl.SaveImpl#getFile <em>File</em>}</li>
 *   <li>{@link fr.irisa.dslCsv.impl.SaveImpl#getSep <em>Sep</em>}</li>
 *   <li>{@link fr.irisa.dslCsv.impl.SaveImpl#getSaveHeader <em>Save Header</em>}</li>
 *   <li>{@link fr.irisa.dslCsv.impl.SaveImpl#getSaveID <em>Save ID</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SaveImpl extends FuncCallImpl implements Save
{
  /**
   * The cached value of the '{@link #getFilename() <em>Filename</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilename()
   * @generated
   * @ordered
   */
  protected Expression filename;

  /**
   * The cached value of the '{@link #getFile() <em>File</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFile()
   * @generated
   * @ordered
   */
  protected Expression file;

  /**
   * The cached value of the '{@link #getSep() <em>Sep</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSep()
   * @generated
   * @ordered
   */
  protected Expression sep;

  /**
   * The cached value of the '{@link #getSaveHeader() <em>Save Header</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSaveHeader()
   * @generated
   * @ordered
   */
  protected Expression saveHeader;

  /**
   * The cached value of the '{@link #getSaveID() <em>Save ID</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSaveID()
   * @generated
   * @ordered
   */
  protected Expression saveID;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SaveImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslCsvPackage.Literals.SAVE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getFilename()
  {
    return filename;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilename(Expression newFilename, NotificationChain msgs)
  {
    Expression oldFilename = filename;
    filename = newFilename;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__FILENAME, oldFilename, newFilename);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilename(Expression newFilename)
  {
    if (newFilename != filename)
    {
      NotificationChain msgs = null;
      if (filename != null)
        msgs = ((InternalEObject)filename).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__FILENAME, null, msgs);
      if (newFilename != null)
        msgs = ((InternalEObject)newFilename).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__FILENAME, null, msgs);
      msgs = basicSetFilename(newFilename, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__FILENAME, newFilename, newFilename));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getFile()
  {
    return file;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFile(Expression newFile, NotificationChain msgs)
  {
    Expression oldFile = file;
    file = newFile;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__FILE, oldFile, newFile);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFile(Expression newFile)
  {
    if (newFile != file)
    {
      NotificationChain msgs = null;
      if (file != null)
        msgs = ((InternalEObject)file).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__FILE, null, msgs);
      if (newFile != null)
        msgs = ((InternalEObject)newFile).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__FILE, null, msgs);
      msgs = basicSetFile(newFile, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__FILE, newFile, newFile));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getSep()
  {
    return sep;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSep(Expression newSep, NotificationChain msgs)
  {
    Expression oldSep = sep;
    sep = newSep;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__SEP, oldSep, newSep);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSep(Expression newSep)
  {
    if (newSep != sep)
    {
      NotificationChain msgs = null;
      if (sep != null)
        msgs = ((InternalEObject)sep).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__SEP, null, msgs);
      if (newSep != null)
        msgs = ((InternalEObject)newSep).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__SEP, null, msgs);
      msgs = basicSetSep(newSep, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__SEP, newSep, newSep));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getSaveHeader()
  {
    return saveHeader;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSaveHeader(Expression newSaveHeader, NotificationChain msgs)
  {
    Expression oldSaveHeader = saveHeader;
    saveHeader = newSaveHeader;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__SAVE_HEADER, oldSaveHeader, newSaveHeader);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSaveHeader(Expression newSaveHeader)
  {
    if (newSaveHeader != saveHeader)
    {
      NotificationChain msgs = null;
      if (saveHeader != null)
        msgs = ((InternalEObject)saveHeader).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__SAVE_HEADER, null, msgs);
      if (newSaveHeader != null)
        msgs = ((InternalEObject)newSaveHeader).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__SAVE_HEADER, null, msgs);
      msgs = basicSetSaveHeader(newSaveHeader, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__SAVE_HEADER, newSaveHeader, newSaveHeader));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getSaveID()
  {
    return saveID;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSaveID(Expression newSaveID, NotificationChain msgs)
  {
    Expression oldSaveID = saveID;
    saveID = newSaveID;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__SAVE_ID, oldSaveID, newSaveID);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSaveID(Expression newSaveID)
  {
    if (newSaveID != saveID)
    {
      NotificationChain msgs = null;
      if (saveID != null)
        msgs = ((InternalEObject)saveID).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__SAVE_ID, null, msgs);
      if (newSaveID != null)
        msgs = ((InternalEObject)newSaveID).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslCsvPackage.SAVE__SAVE_ID, null, msgs);
      msgs = basicSetSaveID(newSaveID, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslCsvPackage.SAVE__SAVE_ID, newSaveID, newSaveID));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslCsvPackage.SAVE__FILENAME:
        return basicSetFilename(null, msgs);
      case DslCsvPackage.SAVE__FILE:
        return basicSetFile(null, msgs);
      case DslCsvPackage.SAVE__SEP:
        return basicSetSep(null, msgs);
      case DslCsvPackage.SAVE__SAVE_HEADER:
        return basicSetSaveHeader(null, msgs);
      case DslCsvPackage.SAVE__SAVE_ID:
        return basicSetSaveID(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslCsvPackage.SAVE__FILENAME:
        return getFilename();
      case DslCsvPackage.SAVE__FILE:
        return getFile();
      case DslCsvPackage.SAVE__SEP:
        return getSep();
      case DslCsvPackage.SAVE__SAVE_HEADER:
        return getSaveHeader();
      case DslCsvPackage.SAVE__SAVE_ID:
        return getSaveID();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslCsvPackage.SAVE__FILENAME:
        setFilename((Expression)newValue);
        return;
      case DslCsvPackage.SAVE__FILE:
        setFile((Expression)newValue);
        return;
      case DslCsvPackage.SAVE__SEP:
        setSep((Expression)newValue);
        return;
      case DslCsvPackage.SAVE__SAVE_HEADER:
        setSaveHeader((Expression)newValue);
        return;
      case DslCsvPackage.SAVE__SAVE_ID:
        setSaveID((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslCsvPackage.SAVE__FILENAME:
        setFilename((Expression)null);
        return;
      case DslCsvPackage.SAVE__FILE:
        setFile((Expression)null);
        return;
      case DslCsvPackage.SAVE__SEP:
        setSep((Expression)null);
        return;
      case DslCsvPackage.SAVE__SAVE_HEADER:
        setSaveHeader((Expression)null);
        return;
      case DslCsvPackage.SAVE__SAVE_ID:
        setSaveID((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslCsvPackage.SAVE__FILENAME:
        return filename != null;
      case DslCsvPackage.SAVE__FILE:
        return file != null;
      case DslCsvPackage.SAVE__SEP:
        return sep != null;
      case DslCsvPackage.SAVE__SAVE_HEADER:
        return saveHeader != null;
      case DslCsvPackage.SAVE__SAVE_ID:
        return saveID != null;
    }
    return super.eIsSet(featureID);
  }

} //SaveImpl
